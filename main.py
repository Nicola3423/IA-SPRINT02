import streamlit as st
import pandas as pd
from Oracledb import carregar_dados_pacientes, carregar_dados_sintoma

# Carregar dados do banco de dados
data = carregar_dados_pacientes()
data2 = carregar_dados_sintoma()

# Normalizar nomes das colunas para evitar erros
data2.columns = data2.columns.str.lower().str.strip()


# Verificar se a coluna correta existe antes de acess√°-la
if 'sintoma_descricao' in data2.columns:
    sintomas_unicos = data2['sintoma_descricao'].dropna().unique()
else:
    st.error("A coluna 'sintoma_descricao' n√£o foi encontrada no DataFrame.")
    sintomas_unicos = []

# Interface do Streamlit
title = "Dashboard de Predi√ß√£o - Pacientes Odontol√≥gicos"
st.title(title)
st.write("Visualiza√ß√£o dos Dados:")
st.dataframe(data)

# Se√ß√£o de inser√ß√£o de dados para predi√ß√£o
st.header("Inserir Dados para Predi√ß√£o")
data_consulta = st.text_input("Data da consulta")

# Sele√ß√£o do Sintoma
Sintoma = st.selectbox("Sintoma", options=sintomas_unicos)

# Seletor de Gravidade
gravidade = st.slider("Gravidade do Sintoma (1-3)", min_value=1, max_value=3, value=2)

# Fun√ß√£o para classificar risco
def classificar_risco(gravidade):
    if gravidade == 1:
        return "Baixo"
    elif gravidade == 2:
        return "M√©dio"
    else:
        return "Alto"

# Calcular risco do paciente
risco = classificar_risco(gravidade)
st.write(f"üîç **Risco Calculado:** {risco}")

# Dicion√°rio de recomenda√ß√µes para sintomas
recomendacoes = {
    "Dor de cabe√ßa": "Tomar analg√©sico leve e repousar.",
    "Febre alta": "Consultar um m√©dico e manter hidrata√ß√£o.",
    "N√°useas": "Evitar alimentos gordurosos e manter hidrata√ß√£o.",
    "Cansa√ßo extremo": "Descansar e verificar exames m√©dicos.",
    "Tontura": "Monitorar press√£o arterial e procurar aux√≠lio m√©dico se necess√°rio."
}

# Exibir recomenda√ß√£o baseada no sintoma
tratamento = recomendacoes.get(Sintoma, "Nenhuma recomenda√ß√£o espec√≠fica encontrada.")
st.write(f"üí° **Recomenda√ß√£o:** {tratamento}")

# Alerta para casos de alto risco
if risco == "Alto":
    st.error("üö® ALTA PRIORIDADE: O paciente precisa de aten√ß√£o urgente!")